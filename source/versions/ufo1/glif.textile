<div class="section">

h1. Glyph Interchange Format

| *File Format* | XML |

The Glyph Interchange Format (GLIF) is a simple and clear XML representation of a single glyph. GLIF files typically have a _.glif_ extension.

h2. Specification

h3. &lt;glyph&gt; The top level element.

h4. Attributes

|_. attribute name |_. description |
| name             | The name of the glyph |
| format           | The format version. 1 for this version. |

The _name_ attribute has limited uses in this version. The _contents.plist_ file maps glyph names to file names, and one of the reasons to do this is to avoid having to parse all files just to get at a list of available glyph names. When reading GLIF files, the _name_ attribute is probably best ignored, since manual editing may have caused a mismatch with the glyph name as stored in _contents.plist_, as well as with the file name, which is an algorithmic transformation of the glyph name. This attribute may become more useful in future versions of GLIF.

h4. Child Elements

|_. element name |_. description |
| advance        | May occur at most once. |
| unicode        | May occur any number of times. |
| outline        | May occur at most once. |
| lib            | May occur at most once. |

h3. &lt;advance&gt;  Horizontal and vertical metrics.

h4. Attributes

|_. attribute name |_. data type      |_. description |
| width            | integer or float | The advance width. |
| height           | integer or float | The vertical advance. |

This element has no child elements.

h3. &lt;unicode&gt; Unicode code point.

h4. Attributes

|_. attribute name |_. description |
| hex | A unicode code point as a hexadecimal number. |

This element has no child elements. The first occurrence of this element defines the primary unicode value for this glyph.

h3. &lt;outline&gt; Outline description.

h4. Child Elements

|_. element name |_. description |
| component      | May occur any number of times. |
| contour        | May occur any number of times. |

This element has no attributes.

h3. &lt;component&gt; Insert another glyph as part of the outline.

h4. Attributes

|_. attribute name |_. data type      |_. description          |_. default value |
| base             | string           | Name of the base glyph | None |
| xScale           | integer or float | See below.             | 1 |
| xyScale          | integer or float | See below.             | 0 |
| yxScale          | integer or float | See below.             | 0 |
| yScale           | integer or float | See below.             | 1 |
| xOffset          | integer or float | See below.             | 0 |
| yOffset          | integer or float | See below.             | 0 |

xScale, xyScale, yxScale, yScale, xOffset, yOffset taken together in that order form an Affine transformation matrix, to be used to transform the base glyph. The default matrix is [1 0 0 1 0 0], the identity transformation.

This element has no child elements.

h3. &lt;contour&gt; Contour description.

h4. Child Elements

|_. element name |_. description |
| point          | May occur any number of times. |

This element has no attributes.

h3. &lt;point&gt; An attributed coordinate pair.

h4. Attributes

|_. attribute name |_. data type      |_. description |_. default value |
| x                | integer or float | The 'x' coordinate. | None |
| y                | integer or float | The 'y' coordinate. | None |
| type             | string           | The point and/or segment type. The options are detailed below. | offcurve |
| smooth           | string           | This attribute can only be given when _type_ indicates the point is on-curve. When set to _yes_, it signifies that a smooth curvature should be maintained at this point, either as a _curve point_ or a _tangent point_ in Fontographer terms. | no |
| name             | string           | Arbitrary name or label for this point. The name does not have to be unique within a contour, nor within an outline. | None |

This element has no child elements.

h5. Point Types

| move     | A point of this type MUST be the first in a _contour_. The reverse is not true: a _contour_ does not necessarily start with a _move_ point. When a _contour_ *does* start with a _move_ point, it signifies the beginning of an *open* contour. A *closed* contour does *not* start with a _move_ and is defined as a cyclic list of points, with no predominant start point. There is always a _next point_ and a _previous point_. For this purpose the list of points can be seen as endless in both directions. The actual list of points can be rotated arbitrarily (by removing the first N points and appending them at the end) while still describing the same outline. |
| line     | Draw a straight line from the previous point to this point. The previous point may be a _move_, a _line_, a _curve_ or a _qcurve_, but not an _offcurve_. |
| offcurve | This point is part of a curve segment, that goes up to the next point that is either a _curve_ or a _qcurve_. |
| curve    | Draw a cubic bezier curve from the last non-_offcurve_ point to this point. If the number of _offcurve_ points is zero, a straight line is drawn. If it is one, a quadratic curve is drawn. If it is two, a regular cubic bezier is drawn. If it is larger than 2, a series of cubic bezier segments are drawn, as defined by the _Super Bezier_ algorithm. |
| qcurve   | Similar to curve, but uses quadratic curves, using the TrueType "implied on-curve points" principle. |

h3. &lt;lib&gt; Custom data storage.

This element is structure is defined as a "XML Property List":http://www.apple.com/DTDs/PropertyList-1.0.dtd. This element may occur at most once. lib has exactly one child, which must be _dict_. To avoid naming conflicts, keys should use the Reverse Domain Naming Convention defined for "lib.plist":../filestructure/lib.html.


h3. Example

<pre class="prettyprint">
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;glyph name=&quot;period&quot; format=&quot;1&quot;&gt;
  &lt;advance width=&quot;268&quot;/&gt;
  &lt;unicode hex=&quot;002E&quot;/&gt;
  &lt;outline&gt;
    &lt;contour&gt;
      &lt;point x=&quot;237&quot; y=&quot;152&quot;/&gt;
      &lt;point x=&quot;193&quot; y=&quot;187&quot;/&gt;
      &lt;point x=&quot;134&quot; y=&quot;187&quot; type=&quot;curve&quot; smooth=&quot;yes&quot;/&gt;
      &lt;point x=&quot;74&quot; y=&quot;187&quot;/&gt;
      &lt;point x=&quot;30&quot; y=&quot;150&quot;/&gt;
      &lt;point x=&quot;30&quot; y=&quot;88&quot; type=&quot;curve&quot; smooth=&quot;yes&quot;/&gt;
      &lt;point x=&quot;30&quot; y=&quot;23&quot;/&gt;
      &lt;point x=&quot;74&quot; y=&quot;-10&quot;/&gt;
      &lt;point x=&quot;134&quot; y=&quot;-10&quot; type=&quot;curve&quot; smooth=&quot;yes&quot;/&gt;
      &lt;point x=&quot;193&quot; y=&quot;-10&quot;/&gt;
      &lt;point x=&quot;237&quot; y=&quot;25&quot;/&gt;
      &lt;point x=&quot;237&quot; y=&quot;88&quot; type=&quot;curve&quot; smooth=&quot;yes&quot;/&gt;
    &lt;/contour&gt;
  &lt;/outline&gt;
  &lt;lib&gt;
    &lt;dict&gt;
      &lt;key&gt;com.letterror.somestuff&lt;/key&gt;
      &lt;string&gt;arbitrary custom data!&lt;/string&gt;
    &lt;/dict&gt;
  &lt;/lib&gt;
&lt;/glyph&gt;
</pre>

</div>